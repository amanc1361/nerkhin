name: Build and Deploy to VPS (Final + No Nested Folders ✅)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build Images and Deploy to VPS
    runs-on: ubuntu-latest

    env:
      DEPLOY_TAG: deploy-${{ github.ref_name }}-run-${{ github.run_number }}

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v2

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🐳 Build and Save Backend Image
      run: |
        docker build -t backend:${DEPLOY_TAG} ./backend
        docker save -o backend-${DEPLOY_TAG}.tar backend:${DEPLOY_TAG}

    - name: 🐳 Build and Save Frontend Image
      run: |
        docker build -t frontend:${DEPLOY_TAG} ./frontend
        docker save -o frontend-${DEPLOY_TAG}.tar frontend:${DEPLOY_TAG}

    - name: ✍️ Generate .env files from secrets
      run: |
        echo "${{ secrets.BACKEND_ENV_CONTENT }}" > backend.env
        echo "${{ secrets.FRONTEND_ENV_CONTENT }}" > frontend.env

    - name: 📂 Create deploy package
      run: |
        mkdir -p deploy_package
        mv backend-${DEPLOY_TAG}.tar frontend-${DEPLOY_TAG}.tar deploy_package/
        cp docker-compose.template.yml deploy.sh backend.env frontend.env deploy_package/

    - name: 🧹 Clean remote deploy directory
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        script: |
          rm -rf ~/nerkhin/deploy_package
          mkdir -p ~/nerkhin/deploy_package

    - name: 🚚 Upload deploy package to VPS (🔥 final fix)
      uses: appleboy/scp-action@master  # ⬅ نسخه مهم!
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        source: "deploy_package"
        target: "/home/${{ secrets.REMOTE_USER }}/nerkhin"
        strip_components: 1              # ⬅ کلید رفع مشکل nested folder

    - name: 🖥 Deploy on VPS
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        script: |
          cd ~/nerkhin/deploy_package
          chmod +x deploy.sh
          ./deploy.sh ${{ env.DEPLOY_TAG }}
